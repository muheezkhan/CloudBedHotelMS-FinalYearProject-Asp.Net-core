#pragma checksum "D:\HiaerNetdata\FYP\HotelCloudBedSystem\HotelCloudBedSystem\Areas\Admin\Views\Shared\Components\SalesChart\Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8a0593d6c170962790a50f40bff72345a322d513"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Shared_Components_SalesChart_Default), @"mvc.1.0.view", @"/Areas/Admin/Views/Shared/Components/SalesChart/Default.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Admin/Views/Shared/Components/SalesChart/Default.cshtml", typeof(AspNetCore.Areas_Admin_Views_Shared_Components_SalesChart_Default))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8a0593d6c170962790a50f40bff72345a322d513", @"/Areas/Admin/Views/Shared/Components/SalesChart/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a9af4978b9c2bfca24ef48e96efe5f8573634464", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Shared_Components_SalesChart_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<HotelCloudBedSystem.Areas.Admin.ViewModels.DashBoardCountViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(75, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "D:\HiaerNetdata\FYP\HotelCloudBedSystem\HotelCloudBedSystem\Areas\Admin\Views\Shared\Components\SalesChart\Default.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(104, 39, true);
            WriteLiteral("\r\n\r\n<input id=\'Usercount\' type=\'hidden\'");
            EndContext();
            BeginWriteAttribute("value", " value=\'", 143, "\'", 185, 1);
#line 8 "D:\HiaerNetdata\FYP\HotelCloudBedSystem\HotelCloudBedSystem\Areas\Admin\Views\Shared\Components\SalesChart\Default.cshtml"
WriteAttributeValue("", 151, String.Join(",",Model.AdminCount), 151, 34, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(186, 40, true);
            WriteLiteral(" />\r\n<input id=\'Usercount\' type=\'hidden\'");
            EndContext();
            BeginWriteAttribute("value", " value=\'", 226, "\'", 270, 1);
#line 9 "D:\HiaerNetdata\FYP\HotelCloudBedSystem\HotelCloudBedSystem\Areas\Admin\Views\Shared\Components\SalesChart\Default.cshtml"
WriteAttributeValue("", 234, String.Join(",",Model.EndUserCount), 234, 36, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(271, 40, true);
            WriteLiteral(" />\r\n<input id=\'Usercount\' type=\'hidden\'");
            EndContext();
            BeginWriteAttribute("value", " value=\'", 311, "\'", 355, 1);
#line 10 "D:\HiaerNetdata\FYP\HotelCloudBedSystem\HotelCloudBedSystem\Areas\Admin\Views\Shared\Components\SalesChart\Default.cshtml"
WriteAttributeValue("", 319, String.Join(",",Model.ManagerCount), 319, 36, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(356, 40, true);
            WriteLiteral(" />\r\n<input id=\'Usercount\' type=\'hidden\'");
            EndContext();
            BeginWriteAttribute("value", " value=\'", 396, "\'", 442, 1);
#line 11 "D:\HiaerNetdata\FYP\HotelCloudBedSystem\HotelCloudBedSystem\Areas\Admin\Views\Shared\Components\SalesChart\Default.cshtml"
WriteAttributeValue("", 404, String.Join(",",Model.TotalUserCount), 404, 38, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(443, 4565, true);
            WriteLiteral(@" />
<p class=""text-center"">
    <strong>Sales: 1 Jan, 2018 - 30 Dec , 2018</strong>
</p>
<div class=""col-md-4"" style=""margin-left:595px;margin-top:-40px;"">
    <ul class=""chart-legend clearfix"">
        <li><i class=""fa fa-shopping-bag text-red""></i>Sales</li>
        <li><i class=""fa fa-cart-plus text-info""></i>Add TO Cart</li>
        <li><i class=""fa fa-arrow-circle-o-right text-yellow""></i>Order</li>
    </ul>
</div>
<div class=""chart"">
    <!-- Sales Chart Canvas -->
    <canvas id=""salesChart"" style=""height: 180px; width: 699px;"" width=""699"" height=""180""></canvas>
</div>
<!-- /.chart-responsive -->

<script>
    $(function () {

        'use strict';
        // -----------------------
        // - MONTHLY SALES CHART -
        // -----------------------

        // Get context with jQuery - using jQuery's .get() method.
        //var salesChartCanvas = $('#salesChart').get(0).getContext('2d');
        //// This will get the first returned node in the jQuery collection.
      ");
            WriteLiteral(@"  //var salesChart = new Chart(salesChartCanvas);

        var salesChartData = {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
            datasets: [
                {
                    label: 'Courses',
                    fillColor: 'rgb(210, 214, 222)',
                    strokeColor: 'rgb(210, 214, 222)',
                    pointColor: 'rgb(210, 214, 222)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgb(220,220,220)',
                    data: [79, 39, 69, 89, 59, 99, 49]
                },
                {
                    label: 'Digital Goods',
                    fillColor: 'rgba(60,141,188,0.9)',
                    strokeColor: 'rgba(60,141,188,0.8)',
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlight");
            WriteLiteral(@"Stroke: 'rgba(60,141,188,1)',
                    data: [60, 40, 90, 30, 99, 70, 89]
                }
            ]
        };

        var salesChartOptions = {
            // Boolean - If we should show the scale at all
            showScale: true,
            // Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            // String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            // Number - Width of the grid lines
            scaleGridLineWidth: 1,
            // Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            // Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            // Boolean - Whether the line is curved between points
            bezierCurve: true,
            // Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            // Boolean");
            WriteLiteral(@" - Whether to show a dot for each point
            pointDot: false,
            // Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            // Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            // Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            // Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            // Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            // Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            // String - A legend template
            legendTemplate: '<ul class=\'<%=name.toLowerCase()%>-legend\'><% for (var i=0; i<datasets.length; i++){%><li><span style=\'background-color:<%=datasets[i].lineColor%>\'></span><%=datasets[i].label%></li><%}%></ul>',
            // Boolean - whether to maintain the starti");
            WriteLiteral(@"ng aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            // Boolean - whether to make the chart responsive to window resizing
            responsive: true
        };

        // Create the line chart
        salesChart.Line(salesChartData, salesChartOptions);
    });
  // ---------------------------
  // - END MONTHLY SALES CHART -
  // ---------------------------
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<HotelCloudBedSystem.Areas.Admin.ViewModels.DashBoardCountViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
